[{"content":"Daftar Isi Pendahuluan Deklarasi dan Inisialisasi Array Akses Elemen Array Iterasi Array Modifikasi Array Panjang Array Array sebagai Parameter Fungsi Perbedaan Array dan Slice Kesimpulan Daftar Pustaka Pendahuluan Array adalah struktur data yang digunakan untuk menyimpan sekumpulan elemen dengan tipe data yang sama di dalam Golang. Array memiliki ukuran tetap yang tidak dapat diubah setelah dideklarasikan.\nDeklarasi dan Inisialisasi Array Di Golang, array dapat dideklarasikan dengan menentukan panjangnya dan tipe datanya.\npackage main import \u0026#34;fmt\u0026#34; func main() { var angka [5]int // Array dengan panjang 5 fmt.Println(angka) // Output: [0 0 0 0 0] } Array juga dapat diinisialisasi saat deklarasi:\nangka := [5]int{1, 2, 3, 4, 5} fmt.Println(angka) // Output: [1 2 3 4 5] Akses Elemen Array Elemen dalam array dapat diakses dengan indeks:\nangka := [5]int{10, 20, 30, 40, 50} fmt.Println(angka[2]) // Output: 30 Iterasi Array Menggunakan perulangan for untuk menelusuri elemen array:\nangka := [5]int{1, 2, 3, 4, 5} for i := 0; i \u0026lt; len(angka); i++ { fmt.Println(angka[i]) } Menggunakan range:\nfor index, value := range angka { fmt.Printf(\u0026#34;Indeks %d: %d\\n\u0026#34;, index, value) } Modifikasi Array Elemen dalam array dapat dimodifikasi dengan mengakses indeksnya:\nangka := [3]int{10, 20, 30} angka[1] = 50 fmt.Println(angka) // Output: [10 50 30] Panjang Array Panjang array dapat diperoleh dengan len():\nangka := [4]int{5, 10, 15, 20} fmt.Println(len(angka)) // Output: 4 Array sebagai Parameter Fungsi Array dapat digunakan sebagai parameter fungsi, tetapi akan dikirim sebagai salinan:\nfunc cetakArray(arr [3]int) { fmt.Println(arr) } func main() { angka := [3]int{1, 2, 3} cetakArray(angka) } Perbedaan Array dan Slice Array memiliki ukuran tetap, sedangkan slice adalah referensi ke bagian array dengan ukuran yang dapat berubah.\nvar arr = [5]int{1, 2, 3, 4, 5} // Array var slice = arr[1:4] // Slice dari array fmt.Println(slice) // Output: [2 3 4] Kesimpulan Array di Golang adalah struktur data dengan ukuran tetap yang dapat menyimpan elemen dengan tipe data yang sama. Untuk ukuran yang dinamis, lebih baik menggunakan slice.\nDaftar Pustaka The Go Programming Language Specification - https://golang.org/ref/spec Effective Go - https://golang.org/doc/effective_go.html Go by Example - https://gobyexample.com ","permalink":"//localhost:1313/posts/array-di-golang/","summary":"\u003ch2 id=\"daftar-isi\"\u003eDaftar Isi\u003c/h2\u003e\n\u003col\u003e\n\u003cli\u003e\u003ca href=\"#pendahuluan\"\u003ePendahuluan\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"#deklarasi-dan-inisialisasi-array\"\u003eDeklarasi dan Inisialisasi Array\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"#akses-elemen-array\"\u003eAkses Elemen Array\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"#iterasi-array\"\u003eIterasi Array\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"#modifikasi-array\"\u003eModifikasi Array\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"#panjang-array\"\u003ePanjang Array\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"#array-sebagai-parameter-fungsi\"\u003eArray sebagai Parameter Fungsi\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"#perbedaan-array-dan-slice\"\u003ePerbedaan Array dan Slice\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"#kesimpulan\"\u003eKesimpulan\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"#daftar-pustaka\"\u003eDaftar Pustaka\u003c/a\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\u003chr\u003e\n\u003ch2 id=\"pendahuluan\"\u003ePendahuluan\u003c/h2\u003e\n\u003cp\u003eArray adalah struktur data yang digunakan untuk menyimpan sekumpulan elemen dengan tipe data yang sama di dalam Golang. Array memiliki ukuran tetap yang tidak dapat diubah setelah dideklarasikan.\u003c/p\u003e\n\u003chr\u003e\n\u003ch2 id=\"deklarasi-dan-inisialisasi-array\"\u003eDeklarasi dan Inisialisasi Array\u003c/h2\u003e\n\u003cp\u003eDi Golang, array dapat dideklarasikan dengan menentukan panjangnya dan tipe datanya.\u003c/p\u003e","title":"Array di golang "}]